---
title: "Lab 9: Baby Names"
format: 
  html: 
    self-contained: true
    theme: minty
    fontsize: 1em
    mainfont: sans-serif
    number-sections: true
    number-depth: 2
    code-block-bg: "#76b5c5"
    highlight-style: monochrome
editor: visual
execute: 
  echo: true
  eval: false
  include: false
---

```{r setup}
#| include: false
library(tidyverse)
```

## The Data

Our dataset(s) in this lab concerns baby names and their popularity over time. At [this link](https://www.dropbox.com/sh/czm61yzmvzl6xfb/AABEFdpy02aNRhZ_vcxrVAQSa?dl=0), you can find the names for ALL 50 states, in separate datasets organized by first letter. For each year, and for each name with at least 50 recorded babies born, we are given the counts of how many babies had that name.

## Is my name not cool any more?

Let's take a look at how the name "Allison" has changed over time. As my name begins with "A", you should download the `StateNames_A.csv` dataset from the link above.

```{r}
#| include: false
babies_a <- read.csv(
  here::here("9_simulation-regression",
             "Lab",
             "Lab-regression",
             "StateNames_A.csv")
  )
```

## Summarizing & Visualizing the Number of Allisons

1.  Make a summary table of the number of babies named "Allison" for each state and the sex of the baby. Specifically, the table should have the following qualities:

- each state should be its own row
- and each sex should have its own column
- if there were no babies born for that combination of state & sex there should be a 0 (not an `NA`)

::: callout-note
# Difference between gender and sex
The dataset has a column titled `Gender`, which contains two values `"F"` and `"M"`, representing "Female" and "Male". The sex someone was assigned at birth is different from their gender identity [(definitions)](https://www.plannedparenthood.org/learn/gender-identity/sex-gender-identity). Thus, this variable should be renamed to `Sex` or `Sex at Birth`.
:::

2.  You should have seen in the table above that "Allison" is a name given overwhelmingly to babies assigned "female" at birth. So, create a new dataset named `allison_f` which contains **only** the babies assigned `F`emale at birth. 

::: {.callout-caution}
This should be the dataset you use for the remainder of the assignment! 
:::

3.  Make a visualization showing how the popularity of the name "Allison" has changed over the years. To be clear, each year should have **one** observation--the total number of Allisons born that year.

## Modeling the Number of Allisons

4. Fit a linear model with the year as the explanatory variable, and the number of Allisons as the response. Similar to #3, each year should have **one** observation--the total number of Allisons born that year.

5.  Write out the estimated regression equation.

6.  Plot the *residuals* of the model, that is, the actual values minus the predicted values. Comment on the residuals - do you see any patterns?

::: callout-tip
The `augment()` function from the **broom** package may be helpful!
:::

7.  What do you conclude from this model? Is my name not cool anymore?

## Spelling by State

In middle school I was **so** upset with my parents for not naming me "Allyson". Past my pre-teen rebellion, I'm happy with my name and am impressed when baristas spell it "Allison" instead of "Alison". But I don't have it as bad as my good friend Allan!

8.  Narrow the A name dataset (downloaded previously) down to only male-assigned babies named "Allan", "Alan", or "Allen". Make a plot comparing the popularity of these names over time.

::: {.callout-tip}
# Filtering multiple values

It looks like you want to filter for a vector of values. What tools have you learned which can help you accomplish this task?
:::

9.  In California, Allan's spelling of his name is the least common of the three but perhaps it's not such an unusual name for his home state of Pennsylvania. Compute the total number of babies born with each spelling of "Allan" in the year 2000, in Pennsylvania and in California. Specifically, the table should have the following qualities:

- each spelling should be its own column
- each state should have its own row
- a `0` (not an `NA`) should be used to represent locations where there were no instances of these names

10.  Convert your total counts to overall percents. That is, what was the percent breakdown between the three spellings in CA? What about in PA?

### Submission

Submit you Lab 9 **before** you complete Challenge 9, so I can see what you added to your assignment for the Challenge. 

## Challenge 9 -- Creating Nice Tables

For this Challenge you will explore how to generate nice looking tables for HTML documents. There are many packages for generating tables, but I prefer the `kable()` function from the **knitr** package for *simple* tables and the `datatable()` function from the **DT** package for *more sophisticated* tables.

I would recommend you think of tables no different from the visualizations you've been making. We want **every** aspect of our tables to be clear to the reader, so the comparisons we want them to make are straightforward. Tables are also a great avenue to display creativity! In fact, there is a yearly [RStudio table contest](https://www.rstudio.com/blog/rstudio-table-contest-2022/), and [here is a gallery](https://community.rstudio.com/c/table-gallery/64) of the award winning tables!

#### Part 1 -- Formatting Basic Tables

Use the `kable()` function from the [kable package](https://bookdown.org/yihui/rmarkdown-cookbook/kable.html) to create nice, basic HTML tables for [**every**]{.underline} table in this lab.

Similar to axis labels in visualizations, **every** column name in a table should describe what it contains. For example, a column of `n` is less explanatory than `Frequency of Babies`.

#### Part 2 - Formatting Nicer Tables

There are two options for creating nicer tables, (1) the [kableExtra package](https://bookdown.org/yihui/rmarkdown-cookbook/kableextra.html) and the [DT Package](https://rstudio.github.io/DT/). This part of the Challenge has two tasks:

1. Use the DT package to include an interactive preview of the dataset **at the beginning of your report**.

2. Use either the DT or kableExtra packages to spice up **at least one** of your tables. Some ideas on how to "spice up" a table: 

- change the font and / or font size
- adding striping and / or cell borders to the table
- creating custom formatting of columns
- allowing the user to interact with the table (e.g., filtering columns, editing cells)

#### Part 3 (Optional, but fun!)

For this portion of the Challenge, you are tasked with using $\LaTeX$ to format your regression equation in #6. Keep in mind our estimated regression equation indicates the response ($y$) is estimated with a hat ($\hat{y}$)!

$\LaTeX$, which is pronounced Lah-tech or Lay-tech, is a document preparation system for high-quality typesetting. It is most often used for medium-to-large technical or scientific documents but it can be used for almost any form of publishing. Some of the perks of using $\LaTeX$ are:

-   typesetting journal articles, technical reports, books, and slide presentations
-   control over large documents containing sectioning, cross-references, tables and figures
-   typesetting of complex mathematical formulas
-   advanced typesetting of mathematics with AMS-LaTeX
-   automatic generation of bibliographies and indexes

### Resources

-   [Overleaf Guide on Mathematical Expressions](https://www.overleaf.com/learn/latex/Mathematical_expressions)

-   [Dr. Theobold's Repository from a LaTeX workshop](https://github.com/atheobold/IntroLaTeXLesson)
